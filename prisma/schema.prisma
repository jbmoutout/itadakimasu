datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Recipe {
  id          Int                @id @default(autoincrement())
  url         String
  originUrl   String?
  title       String?
  description String?
  image       String?
  createdAt   DateTime           @default(now())
  userId      Int
  starred     Boolean            @default(false)
  ingredients RecipeIngredient[]
  gatheredItems GatheredItem[]
  user        User               @relation(fields: [userId], references: [id])

  @@unique([url, userId])
}

model ShoppingList {
  id        Int      @id @default(autoincrement())
  data      Json
  checked   Boolean @default(false)
  createdAt DateTime @default(now())
  userId    Int?
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  pantryItems   PantryItem[]
  gatheredItems GatheredItem[]
  recipes       Recipe[]
}

model Ingredient {
  id          Int                 @id @default(autoincrement())
  name        String              @unique
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  recipes     RecipeIngredient[]
  pantryItems PantryItem[]
  gatheredItems GatheredItem[]
  category    String?
  defaultUnit String?
}

model RecipeIngredient {
  id           Int        @id @default(autoincrement())
  recipeId     Int
  ingredientId Int
  quantity     Float?
  unit         String?
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([recipeId, ingredientId])
}

model PantryItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  quantity     Float
  unit         String
  expiryDate   DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  userId       Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@unique([ingredientId, userId])
}

model GatheredItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  quantity     Float
  unit         String
  gathered     Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  userId       Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
  recipeId     Int?
  recipe       Recipe?    @relation(fields: [recipeId], references: [id])

  @@unique([ingredientId, userId, recipeId])
}